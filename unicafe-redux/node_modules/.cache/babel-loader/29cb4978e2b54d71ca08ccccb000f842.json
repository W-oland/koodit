{"ast":null,"code":"var _jsxFileName = \"/Users/tatu/Desktop/FullStack/unicafe-redux/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport reducer from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(reducer);\nstore.subscribe(() => {\n  const storeNow = store.getState();\n  console.log(storeNow);\n});\n\nconst App = () => {\n  const good = () => {\n    store.dispatch({\n      type: 'GOOD',\n      votes: +1\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: good,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"reset stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"good \", store.getState().good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst renderApp = () => {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tatu/Desktop/FullStack/unicafe-redux/src/index.js"],"names":["React","ReactDOM","createStore","reducer","store","subscribe","storeNow","getState","console","log","App","good","dispatch","type","votes","renderApp","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,KAAK,GAAGF,WAAW,CAACC,OAAD,CAAzB;AAEAC,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,QAAMC,QAAQ,GAAGF,KAAK,CAACG,QAAN,EAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,CAHD;;AAKA,MAAMI,GAAG,GAAG,MAAM;AAChB,QAAMC,IAAI,GAAG,MAAM;AACjBP,IAAAA,KAAK,CAACQ,QAAN,CAAe;AACbC,MAAAA,IAAI,EAAE,MADO;AAEbC,MAAAA,KAAK,EAAE,CAAC;AAFK,KAAf;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,0BAAWP,KAAK,CAACG,QAAN,GAAiBI,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;KAAMD,G;;AAqBN,MAAMK,SAAS,GAAG,MAAM;AACtBd,EAAAA,QAAQ,CAACe,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACD,CAFD;;AAIAH,SAAS;AACTX,KAAK,CAACC,SAAN,CAAgBU,SAAhB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst store = createStore(reducer)\n\nstore.subscribe(() => {\n  const storeNow = store.getState()\n  console.log(storeNow)\n})\n\nconst App = () => {\n  const good = () => {\n    store.dispatch({\n      type: 'GOOD',\n      votes: +1\n    })\n  }\n\n  return (\n    <div>\n      <button onClick={good}>good</button> \n      <button>neutral</button> \n      <button>bad</button>\n      <button>reset stats</button>\n      <div>good {store.getState().good}</div>\n      <div>neutral</div>\n      <div>bad</div>\n    </div>\n  )\n}\n\nconst renderApp = () => {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nrenderApp()\nstore.subscribe(renderApp)"]},"metadata":{},"sourceType":"module"}