{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","fns","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deleteObject","delete","Button","props","onClick","name","Notification","message","className","style","color","fontStyle","fontSize","borderStyle","backgroundColor","borderRadius","padding","marginBottom","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","condition","setCondition","errorMessage","setErrorMessage","useEffect","console","log","personService","initialNotes","length","personsToShow","filter","person","toLowerCase","search","value","onChange","event","target","onSubmit","preventDefault","personObject","number","e","window","confirm","contact","find","returnedPerson","map","setTimeout","returnedNote","concat","type","n","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9075d12.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n  \nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst fns = { getAll, create, update, deleteObject }\nexport default fns\n","import React, { useEffect, useState } from 'react'\nimport personService from './services/persons'\n\nconst Button = (props) => (\n  <button onClick={props.deleteObject}>\n    {props.name}\n  </button>\n)\n\nconst Notification = (props) => {\n  const notificationStyle = {\n    color:'green',\n    fontStyle:'italic',\n    fontSize: 16,\n    borderStyle: \"solid\",\n    backgroundColor: 'lightgrey',\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\"\n  }\n\n  if (props.message === null) {\n    return null\n  }\n\n  return (\n    <div className='error' style={notificationStyle}>\n      {props.message}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const  [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ condition, setCondition] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  \n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}`))\n    personService.deleteObject(id).then(returnedNote => {\n      setPersons(persons.filter(n => n.id !== id))\n    })\n    .catch(error =>{\n      setErrorMessage(`${name} was already deleted`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2000)\n      setPersons(persons.filter(n => n.id !== id ))\n\n    })\n    setErrorMessage(`${name} was deleted`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)      \n  }\n  \n  useEffect(()=> {\n    console.log('effect')\n    personService\n      .getAll() //'http://localhost:3003/api/notes')\n      .then(initialNotes => {\n        console.log('promise fulfilled')\n        setPersons(initialNotes)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const personsToShow = condition\n  ? persons.filter(person => person.name.toLowerCase().search(condition.toLowerCase()) !== -1)\n  : persons\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('Submitted: ', event.target)\n    const personObject = {\n      name: newName, \n      number: newNumber\n    }\n    if(persons.filter(e => e.name === newName).length > 0) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const contact = persons.find(person => person.name === newName) \n        personService\n          .update(contact.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== contact.id ? person : returnedPerson))\n            setErrorMessage(`Changed ${newName}'s phonenumber`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2000)\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedNote =>{\n          console.log(returnedNote)\n          setPersons(persons.concat(returnedNote))\n          setNewName('') // This clears the \"state\"\n          setNewNumber('')\n          console.log(persons)\n          setErrorMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n        })\n      }\n  }\n\n    const handleName = (event) => {\n      console.log('Changed name (state): ', event.target.value)\n      setNewName(event.target.value)\n    }\n\n    const handleNumber = (event) => {\n      console.log('Changed number (state): ', event.target.value)\n      setNewNumber(event.target.value)\n    }\n\n    const handleSearch = (event) => {\n      console.log('Changed search (state)', event.target.value)\n      setCondition(event.target.value)\n    }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <div>\n        filter shown with <input \n        value={condition}\n        onChange={handleSearch}\n        />\n      </div>\n\n      <h2>Add a new</h2>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input \n          value={newName}\n          onChange={handleName}\n          />\n        </div>\n        <div>\n          number: <input\n          value={newNumber}\n          onChange={handleNumber}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map(person =>\n          <li key={person.name}>\n            {person.name} {person.number}\n            <Button name='Delete' deleteObject={() => handleDelete(person.id, person.name)} />\n          </li>\n          )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}