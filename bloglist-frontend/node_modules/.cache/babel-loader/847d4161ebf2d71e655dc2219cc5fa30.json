{"ast":null,"code":"var _jsxFileName = \"/Users/tatu/Desktop/FullStack/bloglist-frontend/src/components/Togglable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Togglable = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [visible, SETvisible] = useState(false);\n  const hide = {\n    display: visible ? 'none' : ''\n  };\n  const show = {\n    display: visible ? '' : 'none'\n  };\n\n  const toggle = () => {\n    SETvisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggle\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hide,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: show,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggle,\n        children: \"cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}, \"XFc2jWbJv+5+Hq1RRXry87Cs2EQ=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = Togglable;\nTogglable.displayName = 'Togglable';\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\nexport default Togglable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Togglable$React.forwardRef\");\n$RefreshReg$(_c2, \"Togglable\");","map":{"version":3,"sources":["/Users/tatu/Desktop/FullStack/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","useImperativeHandle","PropTypes","Togglable","forwardRef","props","ref","visible","SETvisible","hide","display","show","toggle","buttonLabel","children","displayName","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,mBAAzB,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,UAAN,SAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMS,IAAI,GAAG;AAACC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA7B,GAAb;AACA,QAAMI,IAAI,GAAG;AAACD,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAAzB,GAAb;;AAEA,QAAMK,MAAM,GAAG,MAAM;AACjBJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIAN,EAAAA,mBAAmB,CAACK,GAAD,EAAM,MAAM;AAC3B,WAAO;AACHM,MAAAA;AADG,KAAP;AAGH,GAJkB,CAAnB;AAMA,sBACA;AAAA,4BACI;AAAK,MAAA,KAAK,EAAEH,IAAZ;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEG,MAAjB;AAAA,kBAA0BP,KAAK,CAACQ;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAEF,IAAZ;AAAA,iBACKN,KAAK,CAACS,QADX,eAEI;AAAQ,QAAA,OAAO,EAAEF,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CA3BiB;AAAA,UAUdX,mBAVc;AAAA,GAAlB;MAAME,S;AA6BNA,SAAS,CAACY,WAAV,GAAwB,WAAxB;AAEAZ,SAAS,CAACa,SAAV,GAAsB;AAClBH,EAAAA,WAAW,EAAEX,SAAS,CAACe,MAAV,CAAiBC;AADZ,CAAtB;AAIA,eAAef,SAAf","sourcesContent":["import React, {useState, useImperativeHandle} from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n    const [visible, SETvisible] = useState(false)\n\n    const hide = {display: visible ? 'none' : ''}\n    const show = {display: visible ? '' : 'none'}\n\n    const toggle = () => {\n        SETvisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            toggle\n        }\n    })\n\n    return (\n    <div>\n        <div style={hide} >\n            <button onClick={toggle}>{props.buttonLabel}</button>\n        </div>\n        <div style={show}>\n            {props.children}\n            <button onClick={toggle}>cancel</button>\n        </div>\n    </div>\n    )  \n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable"]},"metadata":{},"sourceType":"module"}